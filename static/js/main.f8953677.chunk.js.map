{"version":3,"sources":["react-file-upload.js","SemanticFileUpload.js","App.js","serviceWorker.js","index.js"],"names":["React","Component","require","axios","onPost","reply","d","addYears","Date","SemanticFileUpload","format","props","onFormSubmit","e","preventDefault","console","log","fileUploadFetch","state","file4K","fileHD","fileThumbnail","isPremium","password","source","fileChange4K","setState","target","files","fileName4K","name","fileChangeHD","fileNameHD","fileChangeThumbnail","fileNameThumbnail","fileUpload","file4k","a","async","formData","FormData","append","post","method","url","data","headers","then","response","status","statusCode","error","Error","message","Headers","fetch","body","text","result","catch","onPasswordChange","value","onSourceChange","onPremiumChange","isUploading","this","panes","menuItem","render","Tab","Pane","attached","className","Message","Form","onSubmit","Field","Checkbox","label","checked","fluid","placeholder","onChange","Input","Button","as","htmlFor","type","animated","Content","visible","id","hidden","readOnly","style","marginTop","Progress","percent","success","progress","active","Segment","padding","vertical","Divider","horizontal","menu","pointing","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f8953677.chunk.js","sourcesContent":["import React from 'react'\nimport axios, { post } from 'axios';\n\nclass SimpleReactFileUpload extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state ={\n      file:null\n    }\n    this.onFormSubmit = this.onFormSubmit.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.fileUpload = this.fileUpload.bind(this)\n  }\n  onFormSubmit(e){\n    e.preventDefault() // Stop form submit\n    this.fileUpload(this.state.file).then((response)=>{\n      console.log(response.data);\n    })\n  }\n  onChange(e) {\n    this.setState({file:e.target.files[0]})\n  }\n  fileUpload(file){\n    const url = 'http://example.com/file-upload';\n    const formData = new FormData();\n    formData.append('file',file)\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n    return  post(url, formData,config)\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onFormSubmit}>\n        <h1>File Upload</h1>\n        <input type=\"file\" onChange={this.onChange} />\n        <button type=\"submit\">Upload</button>\n      </form>\n   )\n  }\n}\n\n\n\nexport default SimpleReactFileUpload\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n    Button,\n    Segment,\n    Divider,\n    Tab,\n    Table,\n    Message,\n    Checkbox,\n    Form,\n    Icon,\n    Input,\n    Dropdown,\n    Dimmer,\n    Loader,\n    Label,\n    Progress\n} from \"semantic-ui-react\";\n\nimport addYears from \"date-fns/add_years\";\nimport format from \"date-fns/format\";\n\nimport \"./App.css\";\nimport axios from \"axios\";\nconst MockAdapter = require(\"axios-mock-adapter\");\nconst mock = new MockAdapter(axios);\n\nmock.onPost(\"/file/upload/enpoint\").reply(200);\n\nlet d = addYears(new Date(\"2015-01-01T00:00\"), 1);\nlet f = format(d, \"YYYY-MM-DD\");\n\nexport default class SemanticFileUpload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file4K: null,\n            fileHD: null,\n            fileThumbnail: null,\n            fileName4K: \"\",\n            fileNameHD: \"\",\n            fileNameThumbnail: \"\",\n            isPremium: false,\n            password: '',\n            source: '',\n            isUploading: false,\n            statusCode: \"\"\n        };\n    }\n\n    onFormSubmit = e => {\n        e.preventDefault(); // Stop form submit\n        console.log(\"form submit\");\n        this.fileUploadFetch(this.state.file4K,\n            this.state.fileHD,\n            this.state.fileThumbnail,\n            this.state.isPremium,\n            this.state.password,\n            this.state.source);\n    };\n\n    fileChange4K = e => {\n        this.setState(\n            { file4K: e.target.files[0], fileName4K: e.target.files[0].name },\n            () => {\n                console.log(\n                    \"File chosen --->\",\n                    this.state.file4K,\n                    console.log(\"File name  --->\", this.state.fileName4K)\n                );\n            }\n        );\n    };\n\n    fileChangeHD = e => {\n        this.setState(\n            { fileHD: e.target.files[0], fileNameHD: e.target.files[0].name },\n            () => {\n                console.log(\n                    \"File chosen --->\",\n                    this.state.fileHD,\n                    console.log(\"File name  --->\", this.state.fileNameHD)\n                );\n            }\n        );\n    };\n\n    fileChangeThumbnail = e => {\n        this.setState(\n            { fileThumbnail: e.target.files[0], fileNameThumbnail: e.target.files[0].name },\n            () => {\n                console.log(\n                    \"File chosen --->\",\n                    this.state.fileThumbnail,\n                    console.log(\"File name  --->\", this.state.fileNameThumbnail)\n                );\n            }\n        );\n    };\n\n    fileUpload = async (file4k,\n        fileHD,\n        fileThumbnail,\n        isPremium,\n        password,\n        source) => {\n        const formData = new FormData();\n        formData.append('Image4k', file4k);\n        formData.append('ImageHD', fileHD);\n        formData.append('ImageThumbnail', fileThumbnail);\n\n        formData.append('Password', password);\n        formData.append('IsPremium', isPremium);\n        formData.append('Source', source);\n        formData.append('Categories', 1);\n\n        try {\n            axios.post({\n                method: 'post',\n                url: 'https://localhost:5001/wallpaper/UploadImage',\n                data: formData,\n                headers: { 'Content-Type': 'application/json' }\n            }).then(response => {\n                console.log(response);\n                console.log(response.status);\n                this.setState({ statusCode: response.status }, () => {\n                    console.log(\n                        \"This is the response status code --->\",\n                        this.state.statusCode\n                    );\n                });\n            });\n        } catch (error) {\n            console.error(Error(`Error uploading file ${error.message}`));\n        }\n    };\n\n\n    fileUploadFetch = async (file4k,\n        fileHD,\n        fileThumbnail,\n        isPremium,\n        password,\n        source) => {\n        const formData = new FormData();\n        formData.append('Image4k', file4k);\n        formData.append('ImageHD', fileHD);\n        formData.append('ImageThumbnail', fileThumbnail);\n\n        formData.append('Password', password);\n        formData.append('IsPremium', isPremium);\n        formData.append('Source', source);\n        formData.append('Categories', 1);\n\n\n\n        try {\n            var myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n\n            var requestOptions = {\n                method: 'POST',\n                body: formData\n            };\n\n            fetch(\"https://localhost:5001/wallpaper/UploadImage\", requestOptions)\n                .then(response => {\n                    console.log(response);\n                    console.log(response.status);\n                    this.setState({ statusCode: response.status }, () => {\n                        console.log(\n                            \"This is the response status code --->\",\n                            this.state.statusCode\n                        );\n                    });\n                    return response.text()\n                })\n                .then(result => console.log(result))\n                .catch(error => {\n                    console.log('error', error)\n                    this.setState({ statusCode: 500 }, () => {\n                        console.log(\n                            \"This is the response status code --->\",\n                            this.state.statusCode\n                        );\n                    });\n                } );\n\n        } catch (error) {\n            console.error(Error(`Error uploading file ${error.message}`));\n            this.setState({ statusCode: 500 }, () => {\n                console.log(\n                    \"This is the response status code --->\",\n                    this.state.statusCode\n                );\n            });\n        }\n    };\n\n    onPasswordChange = e => {\n        console.log('onPasswordChange')\n        this.setState({\n            password: e.target.value\n        })\n        console.log(this.state.password)\n    }\n\n    onSourceChange = e => {\n        console.log('onSourceChange')\n        this.setState({\n            source: e.target.value\n        })\n\n        console.log(this.state.source)\n    }\n\n    onPremiumChange = e => {\n        console.log('onSourceChange' + e.target.value)\n        this.setState({\n            isPremium: !this.state.isPremium\n        })\n    }\n\n    render() {\n        const { statusCode } = this.state;\n        const panes = [\n            {\n                menuItem: \"Import \",\n                render: () => (\n                    <Tab.Pane attached={false} className=\"Testo\">\n                        <Message>Provide all information below</Message>\n                        <Form onSubmit={this.onFormSubmit}>\n                            <Form.Field>\n\n                                <Form.Checkbox\n                                    label='Premium'\n                                    checked={this.state.isPremium}\n                                    fluid\n                                    placeholder=\"Premium\"\n                                    value={this.state.isPremium}\n                                    onChange={this.onPremiumChange}\n                                />\n\n                                <Form.Input\n                                    fluid\n                                    placeholder=\"Password\"\n                                    value={this.state.password}\n                                    onChange={this.onPasswordChange}\n                                />\n\n                                <Form.Input\n                                    fluid\n                                    placeholder=\"Source\"\n                                    value={this.state.source}\n                                    onChange={this.onSourceChange}\n                                />\n\n                                <Button as=\"label\" htmlFor=\"file4K\" type=\"button\" animated=\"fade\">\n                                    <Button.Content visible>\n                                    </Button.Content>\n                                    <Button.Content >Choose 4K Wallpaper</Button.Content>\n                                </Button>\n                                <input\n                                    type=\"file\"\n                                    id=\"file4K\"\n                                    hidden\n                                    onChange={this.fileChange4K}\n                                />\n                                <Form.Input\n                                    fluid\n                                    placeholder=\"Use the above bar to browse your file system\"\n                                    readOnly\n                                    value={this.state.fileName4K}\n                                />\n\n\n                                <Button as=\"label\" htmlFor=\"fileHD\" type=\"button\" animated=\"fade\">\n                                    <Button.Content >Choose HD Wallpaper</Button.Content>\n                                </Button>\n                                <input\n                                    type=\"file\"\n                                    id=\"fileHD\"\n                                    hidden\n                                    onChange={this.fileChangeHD}\n                                />\n                                <Form.Input\n                                    fluid\n                                    placeholder=\"Use the above bar to browse your file system\"\n                                    readOnly\n                                    value={this.state.fileNameHD}\n                                />\n\n                                <Button as=\"label\" htmlFor=\"fileThumbnail\" type=\"button\" animated=\"fade\">\n                                    <Button.Content >Choose Thumbnail Wallpaper</Button.Content>\n                                </Button>\n                                <input\n                                    type=\"file\"\n                                    id=\"fileThumbnail\"\n                                    hidden\n                                    onChange={this.fileChangeThumbnail}\n                                />\n                                <Form.Input\n                                    fluid\n                                    placeholder=\"Use the above bar to browse your file system\"\n                                    readOnly\n                                    value={this.state.fileNameThumbnail}\n                                />\n\n\n\n\n                                <Button style={{ marginTop: \"20px\" }} type=\"submit\">\n                                    Upload\n                                </Button>\n                                {statusCode && statusCode === 200 ? (\n                                    <Progress\n                                        style={{ marginTop: \"20px\" }}\n                                        percent={100}\n                                        success\n                                        progress\n                                    >\n                                        File Upload Success\n                                    </Progress>\n                                ) : statusCode && statusCode === 500 ? (\n                                    <Progress\n                                        style={{ marginTop: \"20px\" }}\n                                        percent={100}\n                                        error\n                                        active\n                                        progress\n                                    >\n                                        File Upload Failed\n                                    </Progress>\n                                ) : statusCode && statusCode === 401 ? (\n                                    <Progress\n                                        style={{ marginTop: \"20px\" }}\n                                        percent={0}\n                                        error\n                                        active\n                                        progress\n                                    >\n                                        Wrong password\n                                    </Progress>\n                                ): null}\n                            </Form.Field>\n                        </Form>\n                    </Tab.Pane>\n                )\n            }\n        ];\n        return (\n            <Segment style={{ padding: \"2em 1em\" }} vertical>\n                <Divider horizontal>REAL 4K WALLPAPERS FILE UPLOAD SERVICE</Divider>\n                <Tab menu={{ pointing: true }} panes={panes} />\n            </Segment>\n        );\n    }\n}\n","import './App.css';\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport SimpleReactFileUpload from './react-file-upload'\nimport FileUpload from './FileUpload'\nimport SemanticFileUpload from './SemanticFileUpload'\n\n\nfunction App() {\n  return (\n    <SemanticFileUpload />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}